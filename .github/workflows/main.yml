name: Dobong-Life server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  S3_BUCKET_NAME: dobong-life-s3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # application.yml 생성을 빌드 전으로 이동
      - name: Create application.yml
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Make Directory
        run: mkdir -p deploy

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # application.yml을 deploy 디렉토리로 복사
      - name: Copy application.yml
        run: |
          mkdir -p ./deploy/src/main/resources
          cp ./src/main/resources/application.yml ./deploy/src/main/resources/

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./dobong.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./dobong.zip s3://$S3_BUCKET_NAME/

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        run: |
        # 현재 진행 중인 배포 확인 및 중지
          DEPLOYMENT_ID=$(aws deploy list-deployments \
          --application-name dobong-codedeploy \
          --deployment-group-name dobong-codedeploy-group \
          --include-only-statuses Created Queued InProgress \
          --query 'deployments[0]' \
          --output text)
          
          if [ ! -z "$DEPLOYMENT_ID" ] && [ "$DEPLOYMENT_ID" != "None" ]; then
        echo "Stopping existing deployment: $DEPLOYMENT_ID"
          aws deploy stop-deployment --deployment-id $DEPLOYMENT_ID
          sleep 30  # 배포 중지가 완료될 때까지 대기
          fi
          
          # 새로운 배포 시작
          aws deploy create-deployment \
          --application-name dobong-codedeploy \
          --deployment-group-name dobong-codedeploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=dobong-life-s3,bundleType=zip,key=dobong.zip \
          --region ap-northeast-2

